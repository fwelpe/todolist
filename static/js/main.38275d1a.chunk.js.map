{"version":3,"sources":["config/todoTypesArr.js","components/TodoItem/TodoItem.jsx","config/getTimeFormat.js","components/Todo/Todo.jsx","config/expressWriteUrl.js","components/Calendar/Calendar.jsx","components/AppAuthorized/AppAuthorized.jsx","config/openweatherUrl.js","config/openweatherKey.js","config/openweatherIconUrl.js","components/Header/Header.jsx","serviceWorker.js","index.js","components/App/App.jsx","config/expressUrl.js","config/expressLoginUrl.js"],"names":["TodoItem","props","ifCompletedClass","item","completed","deadlineClass","Date","parse","date","msInDay","importantIconClass","important","yearNow","getFullYear","yearTodo","timeFormat","expires","format","useState","modal3","setModal3","toggle","className","type","checked","onChange","changeDone","id","todo","desc","icon","faFlag","ButtonGroup","Button","onClick","faTimesCircle","changeTodo","faPencilAlt","Modal","isOpen","ModalHeader","ModalFooter","color","delTodo","token","todoObj","setTodoObjHook","console","log","todoSet","descSet","setDate","todoTypes","todoTypesArr","map","v","index","label","key","setId","setImportant","modal","setModal","history","useHistory","match","useRouteMatch","sort","setSort","setTodoObj","newObj","fetch","headers","method","body","JSON","stringify","newTodoObj","typeSet","reset","dropdownOpen","setOpen","params","by","compareFn","todoArr","Object","keys","left","right","lowerLeft","toLowerCase","lowerRight","localeCompare","result","reduce","acc","val","length","constructor","sortTodo","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","push","ModalBody","Form","onSubmit","event","preventDefault","newTodoItem","newIndex","numVal","Number","newTodo","FormGroup","Label","Input","value","target","required","for","initialValue","items","onSelect","currentInput","substr","toUpperCase","check","form","TodoObj","getDayTodo","time","filter","time1","time2","obj1","Y1","getYear","M1","getMonth","D1","getDate","obj2","Y2","M2","D2","compare","size","done","faCheck","regular","faAlignJustify","exact","path","tileContent","view","calendarMonth","calendarDate","calendarYear","arr","forEach","todoDate","todoDateObj","str","join","resStr","onClickDay","render","dayTodo","day","iconStyle","background","dayTodoJSX","ifDone","formatter","Intl","NumberFormat","minimumIntegerDigits","timeObj","deadline","getHours","getMinutes","getVTline","AppAuthorized","faList","faCalendarAlt","to","isAuthorized","weatherText","setWeatherText","weatherIcon","setWeatherIcon","useEffect","openweatherUrl","then","r","json","row","main","temp","openweatherIconUrl","weather","src","Boolean","window","location","hostname","ReactDOM","localStorage","getItem","setTokenHook","authorizedStatus","setAuthorized","user","setUser","psw","setPsw","invalidInput","setInvalidInput","btnClr","setBtnClr","isInitialized","setIsInitialized","a","status","setToken","catch","err","inner","tkn","setItem","username","password","text","setTimeout","error","invalid","placeholder","CircularProgress","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38275d1a.chunk.js","sourcesContent":["export default ['Work', 'Hardwork', 'Learning', 'Chill'];","import React, {useState} from \"react\";\nimport {Button, ButtonGroup, Modal, ModalFooter, ModalHeader} from 'reactstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag, faTimesCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport getTimeFormat from '../../config/getTimeFormat'\n\nimport './TodoItem.css';\n\nconst TodoItem = (props) => {\n\tconst msInDay = 1000 * 60 * 60 * 24;\n\tconst ifCompletedClass = props.item.completed ? 'completed' : '';\n\tconst deadlineClass = (() => {\n\t\tif (props.item.completed)\n\t\t\treturn 'completed';\n\t\telse if ((Date.parse(new Date(props.item.date)) - Date.parse(new Date())) < msInDay * 2)\n\t\t\treturn 'text-danger';\n\t\telse\n\t\t\treturn '';\n\t})();\n\tconst importantIconClass = props.item.important && !props.item.completed ?\n\t\t'importantIcon text-danger rightInFlex' : 'invisible rightInFlex';\n\n\tconst yearNow = new Date().getFullYear();\n\tconst yearTodo = new Date(props.item.date).getFullYear();\n\tconst timeFormat = getTimeFormat(yearNow === yearTodo);\n\tconst expires = <Moment format={timeFormat}>{props.item.date}</Moment>;\n\n\tconst [modal3, setModal3] = useState(false);\n\tconst toggle = () => setModal3(!modal3);\n\tconst deleteItem = () => {\n\t\tprops.delTodo(props.id);\n\t\ttoggle();\n\t};\n\n\treturn (\n\t\t<div className=\"todo-item\">\n\t\t\t<input type=\"checkbox\" checked={props.item.completed} onChange={() => props.changeDone(props.id)} />\n\t\t\t<div className={'mx-lg-3'}>\n\t\t\t\t<p className={ifCompletedClass}>{props.item.todo} [{props.item.type}]</p>\n\t\t\t\t<p className={ifCompletedClass}><small>{props.item.desc}</small></p>\n\t\t\t\t<p className={deadlineClass}>Deadline: {expires}</p>\n\t\t\t</div>\n\t\t\t\t<FontAwesomeIcon icon={faFlag} className={importantIconClass} />\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={toggle}><FontAwesomeIcon icon={faTimesCircle} /></Button>\n\t\t\t\t\t<Button onClick={() => props.changeTodo(props.item, props.id)}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t<Modal isOpen={modal3} toggle={toggle}>\n\t\t\t\t<ModalHeader toggle={toggle}>\n\t\t\t\t\tAre you sure?\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"primary\" onClick={deleteItem}>Yes</Button>\n\t\t\t\t\t<Button color=\"secondary\" onClick={toggle}>No</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t\t</div>\n\t)\n}\n\nexport default TodoItem;","export default (currYear) => currYear ? 'MMMM D' : 'MMMM D, YYYY';","import React, {useState} from 'react';\nimport {\n\tLabel,\n\tInput,\n\tFormGroup,\n\tForm,\n\tButton,\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tModalFooter,\n\tButtonDropdown,\n\tDropdownMenu,\n\tDropdownItem,\n\tDropdownToggle\n} from 'reactstrap'\nimport DateTimePicker from 'react-datetime-picker';\nimport DataListInput from 'react-datalist-input';\nimport ButtonGroup from \"reactstrap/es/ButtonGroup\";\nimport expressWriteUrl from \"../../config/expressWriteUrl\";\nimport todoTypesArr from \"../../config/todoTypesArr\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\n\nimport TodoItem from '../TodoItem/TodoItem.jsx';\nimport './Todo.css';\n\nexport default ({token, todoObj, setTodoObjHook}) => {\n\tconsole.log('Todo');\n\tconst [todo, todoSet] = useState('');\n\tconst [desc, descSet] = useState('');\n\tconst [date, setDate] = useState(new Date());\n\tconst handleChangeTodo = (event) => todoSet(event.target.value);\n\tconst handleChangeDesc = (event) => descSet(event.target.value);\n\tconst todoTypes = todoTypesArr.map((v, index) => ({label: v, key: index}));\n\tconst [id, setId] = useState(false);\n\tconst [important, setImportant] = useState(false);\n\tconst toggleImportant = () => setImportant(!important);\n\tconst [modal, setModal] = useState(false);\n\tlet history = useHistory();\n\tlet match = useRouteMatch();\n\tconst [sort, setSort] = useState();\n\n\tconst setTodoObj = (newObj) => {\n\t\tfetch(expressWriteUrl, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": `Bearer ${token}`,\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(newObj)\n\t\t});\n\n\t\tsetTodoObjHook(newObj);\n\t};\n\n\tconst changeDone = (id) => {\n\t\tconst newTodoObj = {...todoObj};\n\t\tnewTodoObj[id]['completed'] = !newTodoObj[id]['completed'];\n\t\tsetTodoObj(newTodoObj)\n\t};\n\n\tconst delTodo = (id) => {\n\t\tlet newTodoObj = {...todoObj};\n\t\tdelete newTodoObj[id];\n\t\tsetTodoObj(newTodoObj)\n\t};\n\n\tconst changeTodo = (item, id) => {\n\t\tsetModal(true);\n\t\ttodoSet(item.todo);\n\t\tdescSet(item.desc);\n\t\ttypeSet(item.type);\n\t\tsetDate(new Date(item.date));\n\t\tsetId(id);\n\t\tsetImportant(!!item.important);\n\t};\n\n\tconst reset = () => {\n\t\ttodoSet('');\n\t\tdescSet('');\n\t\ttypeSet(todoTypesArr[0]);\n\t\tsetDate(new Date());\n\t\tsetId(false);\n\t\tsetImportant(false);\n\t};\n\n\tconst newTodo = (newTodoItem) => {\n\t\tconst newTodoObj = {...todoObj};\n\t\tconst getNewIndex = () => {\n\t\t\tconst ids = Object.keys(newTodoObj);\n\t\t\tconst getIndex = (acc, val) => {\n\t\t\t\tconst numVal = Number(val);\n\t\t\t\treturn numVal >= acc ? numVal + 1 : acc\n\t\t\t};\n\t\t\treturn ids.reduce(getIndex, 0)\n\t\t};\n\t\tconst newIndex = id ? id : getNewIndex();\n\t\tnewTodoObj[newIndex] = newTodoItem;\n\t\tsetTodoObj(newTodoObj);\n\t\treset();\n\t};\n\n\tconst toggle = () => {\n\t\treset();\n\t\tsetModal(!modal);\n\t};\n\n\tconst sbmt = (event) => {\n\t\tevent.preventDefault();\n\t\tnewTodo({todo: todo, completed: false, type: type, date: date, desc: desc, important: important});\n\t\ttoggle();\n\t};\n\n\tconst [type, typeSet] = useState(todoTypesArr[0])\n\n\tconst sortTodo = (by) => {\n\t\tconst todoArr = Object.keys(todoObj).map((v) => todoObj[v]);\n\t\tlet compareFn;\n\t\tif (!by || by === sort)\n\t\t\treturn;\n\t\telse if (by === 'time') {\n\t\t\tcompareFn = (left, right) => {\n\t\t\t\treturn (new Date(left['date']) - new Date(right['date']));\n\t\t\t}\n\t\t} else if (by === 'type') {\n\t\t\tcompareFn = (left, right) => {\n\t\t\t\tconst lowerLeft = left.type.toLowerCase();\n\t\t\t\tconst lowerRight = right.type.toLowerCase();\n\t\t\t\treturn (lowerLeft.localeCompare(lowerRight));\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\ttodoArr.sort(compareFn);\n\t\tconst assembleObj = (acc, val, index) => {\n\t\t\tacc[index] = val;\n\t\t\treturn acc;\n\t\t};\n\t\tconst result = todoArr.reduce(assembleObj, {});\n\t\tif (!(Object.keys(result).length === 0 && result.constructor === Object)) {\n\t\t\tsetTodoObj(result);\n\t\t}\n\t};\n\n\tconst handleSelectInput = (currentInput, item) => {\n\t\ttypeSet(currentInput);\n\t\treturn (item.label.substr(0, currentInput.length).toUpperCase() === currentInput.toUpperCase());\n\t};\n\n\tconst handleChangeType = (event) => typeSet(event.label);\n\n\tconst [dropdownOpen, setOpen] = useState(false);\n\n\tconst toggle2 = () => setOpen(!dropdownOpen);\n\n\tif (match.params.sort && match.params.sort !== sort) {\n\t\tsortTodo(match.params.sort);\n\t\tsetSort(match.params.sort);\n\t}\n\n\treturn (\n\t\t<div className=\"todo-list\">\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button color=\"primary\" onClick={toggle}>New Todo</Button>\n\t\t\t\t<ButtonDropdown isOpen={dropdownOpen} toggle={toggle2}>\n\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\tSort list\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownItem onClick={() => history.push(`/home/list/time`)}>By time</DropdownItem>\n\t\t\t\t\t\t<DropdownItem onClick={() => history.push(`/home/list/type`)}>By type</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</ButtonDropdown>\n\t\t\t</ButtonGroup>\n\t\t\t<Modal isOpen={modal} toggle={toggle}>\n\t\t\t\t<ModalHeader toggle={toggle}>New Todo</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Form id='add' onSubmit={sbmt}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Name</Label>\n\t\t\t\t\t\t\t<Input type=\"text\" value={todo} onChange={handleChangeTodo} required/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Description (optional)</Label>\n\t\t\t\t\t\t\t<Input type=\"text\" value={desc} onChange={handleChangeDesc}/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"exampleSelect\">Type</Label>\n\t\t\t\t\t\t\t<DataListInput required initialValue={type} items={todoTypes}\n\t\t\t\t\t\t\t\t\t\t   onSelect={handleChangeType}\n\t\t\t\t\t\t\t\t\t\t   match={handleSelectInput}/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Deadline</Label>\n\t\t\t\t\t\t\t<DateTimePicker required onChange={setDate} value={date}/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup check>\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input type=\"checkbox\" checked={important} onChange={toggleImportant}/>\n\t\t\t\t\t\t\t\tImportant\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"primary\" form='add' type=\"submit\">Submit</Button>\n\t\t\t\t\t<Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\n\t\t\t{Object.keys(todoObj).map((v) =>\n\t\t\t\t<TodoItem key={v} id={v} item={todoObj[v]} changeDone={changeDone} delTodo={delTodo}\n\t\t\t\t\t\t  changeTodo={changeTodo}/>)}\n\t\t</div>\n\t)\n}","export default 'http://localhost:3001/write';","import React from 'react';\nimport Calendar from 'react-calendar';\nimport {VerticalTimeline, VerticalTimelineElement} from 'react-vertical-timeline-component';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFlag, faCheck, faAlignJustify} from '@fortawesome/free-solid-svg-icons';\nimport {Route, Switch, useHistory, useRouteMatch} from \"react-router-dom\";\n\nimport './Calendar.css';\n\nexport default ({TodoObj}) => {\n\tconsole.log('Calendar');\n\tlet match = useRouteMatch();\n\tlet history = useHistory();\n\n\tconst todoArr = Object.keys(TodoObj).map((v) => TodoObj[v]);\n\n\tconst tileContentFn = ({date, view}) => {\n\t\tif (view === 'month') {\n\t\t\tconst calendarMonth = date.getMonth();\n\t\t\tconst calendarDate = date.getDate();\n\t\t\tconst calendarYear = date.getYear();\n\t\t\tconst arr = [];\n\t\t\ttodoArr.forEach(({date: todoDate, todo}) => {\n\t\t\t\tconst todoDateObj = new Date(todoDate);\n\t\t\t\tif ((todoDateObj.getDate() === calendarDate) && (todoDateObj.getMonth() === calendarMonth) &&\n\t\t\t\t\ttodoDateObj.getYear() === calendarYear)\n\t\t\t\t\tarr.push(todo);\n\t\t\t});\n\t\t\tconst str = arr.join('; ');\n\t\t\tconst resStr = str.length > 19 ? str.substr(0, 16) + '...' : str;\n\t\t\treturn (<p>{resStr}</p>)\n\t\t}\n\t};\n\n\tconst compare = (time1, time2) => {\n\t\tconst obj1 = new Date(time1);\n\t\tconst Y1 = obj1.getYear();\n\t\tconst M1 = obj1.getMonth();\n\t\tconst D1 = obj1.getDate();\n\t\tconst obj2 = new Date(time2);\n\t\tconst Y2 = obj2.getYear();\n\t\tconst M2 = obj2.getMonth();\n\t\tconst D2 = obj2.getDate();\n\t\treturn ((Y1 === Y2) && (M1 === M2) && (D1 === D2))\n\t}\n\n\tconst getDayTodo = (time) => todoArr.filter((v) => compare(time, v.date))\n\n\tconst important = <FontAwesomeIcon size=\"lg\" icon={faFlag}/>;\n\tconst done = <FontAwesomeIcon size=\"lg\" icon={faCheck}/>;\n\tconst regular = <FontAwesomeIcon size=\"lg\" icon={faAlignJustify}/>;\n\n\tconst onClickDayFn = (value) => {\n\t\tif (getDayTodo(value).length)\n\t\t\thistory.push(`/home/calendar/${value}`);\n\t};\n\n\tconst getVTline = (props) => {\n\t\tconst dayTodo = getDayTodo(props.match.params.day);\n\t\tconst iconStyle = {background: 'rgb(33, 150, 243)', color: '#fff'};\n\t\tconst dayTodoTimesorted = dayTodo.sort(({date: left}, {date: right}) =>\n\t\t\t(new Date(left) - new Date(right)));\n\t\tconst dayTodoJSX = dayTodoTimesorted.map((v, index) => {\n\t\t\tconst ifDone = v.completed ? 'done' : '';\n\t\t\tconst icon = (() => {\n\t\t\t\tif (v.completed)\n\t\t\t\t\treturn done;\n\t\t\t\telse if (v.important)\n\t\t\t\t\treturn important;\n\t\t\t\telse\n\t\t\t\t\treturn regular;\n\t\t\t})();\n\t\t\tconst formatter = (new Intl.NumberFormat('ru-RU', {minimumIntegerDigits: 2})).format;\n\t\t\tconst timeObj = new Date(v.date);\n\t\t\tconst deadline = formatter(timeObj.getHours()) + ':' + formatter(timeObj.getMinutes());\n\n\t\t\treturn <VerticalTimelineElement key={index} iconStyle={iconStyle} icon={icon} date={deadline}>\n\t\t\t\t<h4 className={ifDone}>{v.todo} [{v.type}]</h4><p className={ifDone}>{v.desc}</p>\n\t\t\t</VerticalTimelineElement>\n\t\t});\n\t\treturn (<VerticalTimeline>{dayTodoJSX}</VerticalTimeline>)\n\t};\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path={match.path}>\n\t\t\t\t<Calendar tileContent={tileContentFn} className=\"calendar\" onClickDay={onClickDayFn}/>\n\t\t\t</Route>\n\t\t\t<Route path={`${match.path}/:day`} render={(props) => getVTline(props)}/>\n\t\t</Switch>\n\t)\n}","import React from 'react';\nimport {Button} from 'reactstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCalendarAlt, faList} from '@fortawesome/free-solid-svg-icons';\nimport {Route, Redirect, useHistory, useRouteMatch} from \"react-router-dom\";\n\nimport './AppAuthorized.css';\n\nimport Todo from '../Todo/Todo.jsx';\nimport Calendar from '../Calendar/Calendar.jsx';\n\nconst AppAuthorized = ({token, todoObj, setTodoObjHook}) => {\n\tconsole.log('AppAuthorized');\n\tlet history = useHistory();\n\tlet match = useRouteMatch();\n\n\tconst showList = () => history.push(`${match.path}/list`);\n\tconst showCalendar = () => history.push(`${match.path}/calendar`);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"mainBtns\">\n\t\t\t\t<Button onClick={showList}>\n\t\t\t\t\t<FontAwesomeIcon icon={faList}/>\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={showCalendar}>\n\t\t\t\t\t<FontAwesomeIcon icon={faCalendarAlt}/>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Route exact path={match.path}>\n\t\t\t\t<Redirect to={`${match.path}/list`}/>\n\t\t\t</Route>\n\n\t\t\t<Route exact path={`${match.path}/list`}>\n\t\t\t\t<Todo token={token} todoObj={todoObj} setTodoObjHook={setTodoObjHook}/>\n\t\t\t</Route>\n\n\t\t\t<Route path={`${match.path}/list/:sort`}>\n\t\t\t\t<Todo token={token} todoObj={todoObj} setTodoObjHook={setTodoObjHook}/>\n\t\t\t</Route>\n\n\t\t\t<Route path={`${match.path}/calendar`}>\n\t\t\t\t<Calendar token={token} TodoObj={todoObj}/>\n\t\t\t</Route>\n\t\t</div>\n\t)\n};\n\nexport default AppAuthorized;\n","import openweatherKey from \"./openweatherKey\";\n\nexport default `http://api.openweathermap.org/data/2.5/weather?id=524901&APPID=${openweatherKey}&units=metric`","export default '3eb3f8b5e93b49c844e8317fe0e4e210';","export default ['http://openweathermap.org/img/wn/', '@2x.png'];","import React, {useState, useEffect} from 'react';\nimport Img from 'react-image';\nimport openweatherUrl from \"../../config/openweatherUrl\";\nimport openweatherIconUrl from \"../../config/openweatherIconUrl\";\n\nimport './Header.css'\n\nexport default ({isAuthorized}) => {\n\tconst [weatherText, setWeatherText] = useState('');\n\tconst [weatherIcon, setWeatherIcon] = useState('');\n\n\tuseEffect(() => {\n\t\tif (isAuthorized) {\n\t\t\tfetch(openweatherUrl)\n\t\t\t\t.then((r) => r.json())\n\t\t\t\t.then((r) => {\n\t\t\t\t\tconst row = r.main.temp + ' °C';\n\t\t\t\t\tsetWeatherText(row);\n\t\t\t\t\tsetWeatherIcon(openweatherIconUrl[0] + r.weather[0].icon + openweatherIconUrl[1]);\n\t\t\t\t})\n\t\t}\n\t}, [isAuthorized]);\n\treturn (\n\t\t<div className=\"header navbar\">\n\t\t\t<div id={'title'}>\n\t\t\t\tTodoList\n\t\t\t</div>\n\t\t\t{isAuthorized ?\n\t\t\t\t<div id={'weather'}>\n\t\t\t\t\t<div className=\"temp\">\n\t\t\t\t\t\t{weatherText}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Img className=\"icon\" src={weatherIcon}/>\n\t\t\t\t</div> : null}\n\t\t</div>\n\t)\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {useEffect, useState} from 'react';\nimport AppAuthorized from '../AppAuthorized/AppAuthorized.jsx';\nimport Header from '../Header/Header.jsx';\nimport expressGetUrl from \"../../config/expressUrl\";\nimport {BrowserRouter, Route, Redirect} from \"react-router-dom\";\nimport {Button, Form, FormGroup, Input, Label} from \"reactstrap\";\nimport expressLoginUrl from \"../../config/expressLoginUrl\";\nimport {CircularProgress} from \"@material-ui/core\";\n\nimport './App.css';\n\nexport default () => {\n\tconst [token, setTokenHook] = useState(localStorage.getItem('token'));\n\tconst [authorizedStatus, setAuthorized] = useState();\n\tconsole.log('App; authorizedStatus = ', authorizedStatus);\n\tconst [user, setUser] = useState('');\n\tconst handleChangeUser = (event) => setUser(event.target.value);\n\tconst [psw, setPsw] = useState('');\n\tconst handleChangePsw = (event) => setPsw(event.target.value);\n\tconst [invalidInput, setInvalidInput] = useState(false);\n\tconst [btnClr, setBtnClr] = useState('secondary');\n\tconst [todoObj, setTodoObjHook] = useState({});\n\tconst [isInitialized, setIsInitialized] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst inner = async () => {\n\t\t\tif (token) {\n\t\t\t\tawait fetch(expressGetUrl, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tsetAuthorized(r.status);\n\t\t\t\t\t\tif (r.status === 200)\n\t\t\t\t\t\t\treturn r.json();\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetToken('');\n\t\t\t\t\t\t\treturn {};\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\tsetTodoObjHook(r);\n\t\t\t\t\t\tsetIsInitialized(true);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tconsole.log('err in main data read fetch', err);\n\t\t\t\t\t\tsetIsInitialized(true);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetIsInitialized(true);\n\t\t\t}\n\t\t}\n\t\tinner();\n\t}, [token]);\n\n\tconst setToken = (tkn) => {\n\t\tlocalStorage.setItem('token', tkn);\n\t\tsetTokenHook(tkn);\n\t};\n\n\tconst sbmt = (event) => {\n\t\tevent.preventDefault();\n\t\tfetch(expressLoginUrl, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({username: user, password: psw})\n\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tconsole.log('Login setting status', r.status);\n\t\t\t\tsetAuthorized(r.status);\n\t\t\t\tif (r.status === 200)\n\t\t\t\t\treturn r.text();\n\t\t\t\telse {\n\t\t\t\t\tsetInvalidInput(true);\n\t\t\t\t\tsetBtnClr('danger');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetInvalidInput(false);\n\t\t\t\t\t\tsetBtnClr('secondary');\n\t\t\t\t\t}, 2000);\n\t\t\t\t\tsetToken('');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tif (r) {\n\t\t\t\t\tsetToken(r);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetAuthorized(err);\n\t\t\t\tconsole.error(err);\n\t\t\t})\n\t};\n\n\tconst isAuthorized = (authorizedStatus === 200) && !!token;\n\n\treturn isInitialized ? (\n\t\t<BrowserRouter>\n\t\t\t<Header isAuthorized={isAuthorized}/>\n\t\t\t<Route exact path={'/'}>\n\t\t\t\t{isAuthorized ? <Redirect to={'/home'}/> :\n\t\t\t\t\t<div id=\"login\" className=\"form-signin\">\n\t\t\t\t\t\t<Form onSubmit={sbmt}>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"login\">Login</Label>\n\t\t\t\t\t\t\t\t<Input invalid={invalidInput} type=\"text\" id=\"login\" placeholder=\"Login\"\n\t\t\t\t\t\t\t\t\t   value={user} onChange={handleChangeUser} required/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Label for=\"psw\">Password</Label>\n\t\t\t\t\t\t\t\t<Input invalid={invalidInput} type=\"password\" id=\"psw\" placeholder=\"Password\"\n\t\t\t\t\t\t\t\t\t   value={psw} onChange={handleChangePsw} required/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<Button color={btnClr}\n\t\t\t\t\t\t\t\t\tclassName={\"btn btn-lg btn-primary btn-block\"}>Submit</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Route>\n\n\t\t\t<Route path={'/home'}>\n\t\t\t\t{!isAuthorized ? <Redirect to={'/'}/> :\n\t\t\t\t\t<AppAuthorized token={token} todoObj={todoObj} setTodoObjHook={setTodoObjHook}/>\n\t\t\t\t}\n\t\t\t</Route>\n\t\t</BrowserRouter>\n\t) : <div id=\"loader\"><CircularProgress /></div>\n}\n","export default 'http://localhost:3001';","export default 'http://localhost:3001/login';"],"sourceRoot":""}