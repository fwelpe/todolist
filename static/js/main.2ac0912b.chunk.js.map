{"version":3,"sources":["config/expressUrl.js","config/todoTypesArr.js","components/TodoItem/TodoItem.jsx","config/getTimeFormat.js","components/Todo/Todo.jsx","config/expressWriteUrl.js","components/Calendar/Calendar.jsx","components/AppAuthorized/AppAuthorized.jsx","config/openweatherUrl.js","config/openweatherKey.js","config/openweatherIconUrl.js","components/Header/Header.jsx","components/Login/Login.jsx","config/expressLoginUrl.js","serviceWorker.js","index.js","components/App/App.jsx"],"names":["TodoItem","props","ifCompletedClass","item","completed","deadlineClass","Date","parse","date","msInDay","importantIconClass","important","yearNow","getFullYear","yearTodo","timeFormat","expires","format","useState","modal3","setModal3","toggle","className","type","checked","onChange","changeDone","id","todo","desc","icon","faFlag","ButtonGroup","Button","onClick","faTimesCircle","changeTodo","faPencilAlt","Modal","isOpen","ModalHeader","ModalFooter","color","delTodo","token","setAuthorized","todoSet","descSet","setDate","todoTypes","todoTypesArr","map","v","index","label","key","setId","setImportant","modal","setModal","todoObj","setTodoObjHook","history","useHistory","match","useRouteMatch","sort","setSort","useEffect","abortController","AbortController","signal","fetch","expressGetUrl","headers","then","r","status","json","catch","err","abort","setTodoObj","newObj","method","body","JSON","stringify","newTodoObj","typeSet","reset","dropdownOpen","setOpen","params","by","compareFn","todoArr","Object","keys","left","right","lowerLeft","toLowerCase","lowerRight","localeCompare","result","reduce","acc","val","length","constructor","sortTodo","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","push","ModalBody","Form","onSubmit","event","preventDefault","newTodoItem","newIndex","numVal","Number","newTodo","FormGroup","Label","Input","value","target","required","for","initialValue","items","onSelect","currentInput","substr","toUpperCase","check","form","TodoObj","expressUrl","console","error","getDayTodo","time","filter","time1","time2","obj1","Y1","getYear","M1","getMonth","D1","getDate","obj2","Y2","M2","D2","compare","size","done","faCheck","regular","faAlignJustify","exact","path","tileContent","view","calendarMonth","calendarDate","calendarYear","arr","forEach","todoDate","todoDateObj","str","join","resStr","onClickDay","render","dayTodo","day","iconStyle","background","dayTodoJSX","ifDone","formatter","Intl","NumberFormat","minimumIntegerDigits","timeObj","deadline","getHours","getMinutes","getVTline","AppAuthorized","isAuthorized","faList","faCalendarAlt","to","weatherText","setWeatherText","weatherIcon","setWeatherIcon","openweatherUrl","row","main","temp","openweatherIconUrl","weather","src","user","setUser","psw","setPsw","invalidInput","setInvalidInput","btnClr","setBtnClr","username","password","text","setTimeout","setToken","invalid","placeholder","Boolean","window","location","hostname","ReactDOM","localStorage","getItem","setTokenHook","authorizedStatus","tkn","setItem","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ac0912b.chunk.js","sourcesContent":["export default 'http://localhost:3001';","export default ['Work', 'Hardwork', 'Learning', 'Chill'];","import React, {useState} from \"react\";\nimport {Button, ButtonGroup, Modal, ModalFooter, ModalHeader} from 'reactstrap';\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlag, faTimesCircle, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport getTimeFormat from '../../config/getTimeFormat'\n\nimport './TodoItem.css';\n\nconst TodoItem = (props) => {\n\tconst msInDay = 1000 * 60 * 60 * 24;\n\tconst ifCompletedClass = props.item.completed ? 'completed' : '';\n\tconst deadlineClass = (() => {\n\t\tif (props.item.completed)\n\t\t\treturn 'completed';\n\t\telse if ((Date.parse(new Date(props.item.date)) - Date.parse(new Date())) < msInDay * 2)\n\t\t\treturn 'text-danger';\n\t\telse\n\t\t\treturn '';\n\t})();\n\tconst importantIconClass = props.item.important && !props.item.completed ?\n\t\t'importantIcon text-danger rightInFlex' : 'invisible rightInFlex';\n\n\tconst yearNow = new Date().getFullYear();\n\tconst yearTodo = new Date(props.item.date).getFullYear();\n\tconst timeFormat = getTimeFormat(yearNow === yearTodo);\n\tconst expires = <Moment format={timeFormat}>{props.item.date}</Moment>;\n\n\tconst [modal3, setModal3] = useState(false);\n\tconst toggle = () => setModal3(!modal3);\n\tconst deleteItem = () => {\n\t\tprops.delTodo(props.id);\n\t\ttoggle();\n\t};\n\n\treturn (\n\t\t<div className=\"todo-item\">\n\t\t\t<input type=\"checkbox\" checked={props.item.completed} onChange={() => props.changeDone(props.id)} />\n\t\t\t<div className={'mx-lg-3'}>\n\t\t\t\t<p className={ifCompletedClass}>{props.item.todo} [{props.item.type}]</p>\n\t\t\t\t<p className={ifCompletedClass}><small>{props.item.desc}</small></p>\n\t\t\t\t<p className={deadlineClass}>Deadline: {expires}</p>\n\t\t\t</div>\n\t\t\t\t<FontAwesomeIcon icon={faFlag} className={importantIconClass} />\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button onClick={toggle}><FontAwesomeIcon icon={faTimesCircle} /></Button>\n\t\t\t\t\t<Button onClick={() => props.changeTodo(props.item, props.id)}>\n\t\t\t\t\t\t<FontAwesomeIcon icon={faPencilAlt} />\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t<Modal isOpen={modal3} toggle={toggle}>\n\t\t\t\t<ModalHeader toggle={toggle}>\n\t\t\t\t\tAre you sure?\n\t\t\t\t</ModalHeader>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"primary\" onClick={deleteItem}>Yes</Button>\n\t\t\t\t\t<Button color=\"secondary\" onClick={toggle}>No</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\t\t\t</div>\n\t)\n}\n\nexport default TodoItem;","export default (currYear) => currYear ? 'MMMM D' : 'MMMM D, YYYY';","import React, {useState, useEffect} from 'react';\nimport {\n\tLabel,\n\tInput,\n\tFormGroup,\n\tForm,\n\tButton,\n\tModal,\n\tModalHeader,\n\tModalBody,\n\tModalFooter,\n\tButtonDropdown,\n\tDropdownMenu,\n\tDropdownItem,\n\tDropdownToggle\n} from 'reactstrap'\nimport DateTimePicker from 'react-datetime-picker';\nimport DataListInput from 'react-datalist-input';\nimport ButtonGroup from \"reactstrap/es/ButtonGroup\";\nimport expressGetUrl from \"../../config/expressUrl\";\nimport expressWriteUrl from \"../../config/expressWriteUrl\";\nimport todoTypesArr from \"../../config/todoTypesArr\";\nimport {useHistory, useRouteMatch} from \"react-router-dom\";\n\nimport TodoItem from '../TodoItem/TodoItem.jsx';\nimport './Todo.css';\n\nexport default ({token, setAuthorized}) => {\n\tconst [todo, todoSet] = useState('');\n\tconst [desc, descSet] = useState('');\n\tconst [date, setDate] = useState(new Date());\n\tconst handleChangeTodo = (event) => todoSet(event.target.value);\n\tconst handleChangeDesc = (event) => descSet(event.target.value);\n\tconst todoTypes = todoTypesArr.map((v, index) => ({label: v, key: index}));\n\tconst [id, setId] = useState(false);\n\tconst [important, setImportant] = useState(false);\n\tconst toggleImportant = () => setImportant(!important);\n\tconst [modal, setModal] = useState(false);\n\tconst [todoObj, setTodoObjHook] = useState({});\n\tlet history = useHistory();\n\tlet match = useRouteMatch();\n\tconst [sort, setSort] = useState();\n\n\tuseEffect(() => {\n\t\tconst abortController = new AbortController();\n\t\tconst signal = abortController.signal;\n\n\t\tfetch(expressGetUrl, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t\t},\n\t\t\tsignal: signal\n\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tsetAuthorized(r.status);\n\t\t\t\tif (r.status === 200)\n\t\t\t\t\treturn r.json();\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tsetTodoObjHook(r);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetAuthorized(err);\n\t\t\t});\n\n\t\treturn function () {\n\t\t\tabortController.abort();\n\t\t};\n\t}, [setAuthorized, token]);\n\n\tconst setTodoObj = (newObj) => {\n\t\tfetch(expressWriteUrl, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": `Bearer ${token}`,\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(newObj)\n\t\t})\n\t\t\t.then((r) => setAuthorized(r.status));\n\n\t\tsetTodoObjHook(newObj);\n\t};\n\n\tconst changeDone = (id) => {\n\t\tconst newTodoObj = {...todoObj};\n\t\tnewTodoObj[id]['completed'] = !newTodoObj[id]['completed'];\n\t\tsetTodoObj(newTodoObj)\n\t};\n\n\tconst delTodo = (id) => {\n\t\tlet newTodoObj = {...todoObj};\n\t\tdelete newTodoObj[id];\n\t\tsetTodoObj(newTodoObj)\n\t};\n\n\tconst changeTodo = (item, id) => {\n\t\tsetModal(true);\n\t\ttodoSet(item.todo);\n\t\tdescSet(item.desc);\n\t\ttypeSet(item.type);\n\t\tsetDate(new Date(item.date));\n\t\tsetId(id);\n\t\tsetImportant(!!item.important);\n\t};\n\n\tconst reset = () => {\n\t\ttodoSet('');\n\t\tdescSet('');\n\t\ttypeSet(todoTypesArr[0]);\n\t\tsetDate(new Date());\n\t\tsetId(false);\n\t\tsetImportant(false);\n\t};\n\n\tconst newTodo = (newTodoItem) => {\n\t\tconst newTodoObj = {...todoObj}\n\t\tconst getNewIndex = () => {\n\t\t\tconst ids = Object.keys(newTodoObj)\n\t\t\tconst getIndex = (acc, val) => {\n\t\t\t\tconst numVal = Number(val)\n\t\t\t\treturn numVal >= acc ? numVal + 1 : acc\n\t\t\t}\n\t\t\treturn ids.reduce(getIndex, 0)\n\t\t}\n\t\tconst newIndex = id ? id : getNewIndex();\n\t\tnewTodoObj[newIndex] = newTodoItem;\n\t\tsetTodoObj(newTodoObj)\n\t\treset();\n\t};\n\n\tconst toggle = () => {\n\t\treset();\n\t\tsetModal(!modal);\n\t}\n\n\tconst sbmt = (event) => {\n\t\tevent.preventDefault();\n\t\tnewTodo({todo: todo, completed: false, type: type, date: date, desc: desc, important: important});\n\t\ttoggle();\n\t}\n\n\tconst [type, typeSet] = useState(todoTypesArr[0])\n\n\tconst sortTodo = (by) => {\n\t\tconst todoArr = Object.keys(todoObj).map((v) => todoObj[v]);\n\t\tlet compareFn;\n\t\tif (!by || by === sort)\n\t\t\treturn;\n\t\telse if (by === 'time') {\n\t\t\tcompareFn = (left, right) => {\n\t\t\t\treturn (new Date(left['date']) - new Date(right['date']));\n\t\t\t}\n\t\t} else if (by === 'type') {\n\t\t\tcompareFn = (left, right) => {\n\t\t\t\tconst lowerLeft = left.type.toLowerCase();\n\t\t\t\tconst lowerRight = right.type.toLowerCase();\n\t\t\t\treturn (lowerLeft.localeCompare(lowerRight));\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\ttodoArr.sort(compareFn);\n\t\tconst assembleObj = (acc, val, index) => {\n\t\t\tacc[index] = val;\n\t\t\treturn acc;\n\t\t}\n\t\tconst result = todoArr.reduce(assembleObj, {});\n\t\tif (!(Object.keys(result).length === 0 && result.constructor === Object)) {\n\t\t\tsetTodoObj(result);\n\t\t}\n\t}\n\n\tconst handleSelectInput = (currentInput, item) => {\n\t\ttypeSet(currentInput);\n\t\treturn (item.label.substr(0, currentInput.length).toUpperCase() === currentInput.toUpperCase());\n\t}\n\n\tconst handleChangeType = (event) => typeSet(event.label)\n\n\tconst [dropdownOpen, setOpen] = useState(false);\n\n\tconst toggle2 = () => setOpen(!dropdownOpen);\n\n\n\tif (match.params.sort && match.params.sort !== sort) {\n\t\tsortTodo(match.params.sort);\n\t\tsetSort(match.params.sort);\n\t}\n\n\treturn (\n\t\t<div className=\"todo-list\">\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button color=\"primary\" onClick={toggle}>New Todo</Button>\n\t\t\t\t<ButtonDropdown isOpen={dropdownOpen} toggle={toggle2}>\n\t\t\t\t\t<DropdownToggle caret>\n\t\t\t\t\t\tSort list\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t<DropdownItem onClick={() => history.push(`/home/list/time`)}>By time</DropdownItem>\n\t\t\t\t\t\t<DropdownItem onClick={() => history.push(`/home/list/type`)}>By type</DropdownItem>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</ButtonDropdown>\n\t\t\t</ButtonGroup>\n\t\t\t<Modal isOpen={modal} toggle={toggle}>\n\t\t\t\t<ModalHeader toggle={toggle}>New Todo</ModalHeader>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<Form id='add' onSubmit={sbmt}>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Name</Label>\n\t\t\t\t\t\t\t<Input type=\"text\" value={todo} onChange={handleChangeTodo} required/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Description (optional)</Label>\n\t\t\t\t\t\t\t<Input type=\"text\" value={desc} onChange={handleChangeDesc}/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label for=\"exampleSelect\">Type</Label>\n\t\t\t\t\t\t\t<DataListInput required initialValue={type} items={todoTypes}\n\t\t\t\t\t\t\t\t\t\t   onSelect={handleChangeType}\n\t\t\t\t\t\t\t\t\t\t   match={handleSelectInput}/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<Label>Deadline</Label>\n\t\t\t\t\t\t\t<DateTimePicker required onChange={setDate} value={date}/>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t<FormGroup check>\n\t\t\t\t\t\t\t<Label check>\n\t\t\t\t\t\t\t\t<Input type=\"checkbox\" checked={important} onChange={toggleImportant}/>\n\t\t\t\t\t\t\t\tImportant\n\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</Form>\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"primary\" form='add' type=\"submit\">Submit</Button>\n\t\t\t\t\t<Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n\t\t\t\t</ModalFooter>\n\t\t\t</Modal>\n\n\t\t\t{Object.keys(todoObj).map((v) =>\n\t\t\t\t<TodoItem key={v} id={v} item={todoObj[v]} changeDone={changeDone} delTodo={delTodo}\n\t\t\t\t\t\t  changeTodo={changeTodo}/>)}\n\t\t</div>\n\t)\n}","export default 'http://localhost:3001/write';","import React, {useState, useEffect} from 'react';\nimport Calendar from 'react-calendar';\nimport {VerticalTimeline, VerticalTimelineElement} from 'react-vertical-timeline-component';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFlag, faCheck, faAlignJustify} from '@fortawesome/free-solid-svg-icons';\nimport {Route, Switch, useHistory, useRouteMatch} from \"react-router-dom\";\n\nimport expressUrl from \"../../config/expressUrl\";\nimport './Calendar.css';\n\nexport default (props) => {\n\tconst [TodoObj, setTodoObjHook] = useState({});\n\tlet match = useRouteMatch();\n\tlet history = useHistory();\n\n\n\tuseEffect(() => {\n\t\tfetch(expressUrl, {\n\t\t\theaders: {\n\t\t\t\t\"Authorization\": `Bearer ${props.token}`,\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then((r) => r.json())\n\t\t\t.then((r) => {\n\t\t\t\tsetTodoObjHook(r);\n\t\t\t})\n\t\t\t.catch((err) => console.error(err))\n\t}, [props.token]);\n\n\tconst todoArr = Object.keys(TodoObj).map((v) => TodoObj[v]);\n\n\tconst tileContentFn = ({date, view}) => {\n\t\tif (view === 'month') {\n\t\t\tconst calendarMonth = date.getMonth();\n\t\t\tconst calendarDate = date.getDate();\n\t\t\tconst calendarYear = date.getYear();\n\t\t\tconst arr = [];\n\t\t\ttodoArr.forEach(({date: todoDate, todo}) => {\n\t\t\t\tconst todoDateObj = new Date(todoDate);\n\t\t\t\tif ((todoDateObj.getDate() === calendarDate) && (todoDateObj.getMonth() === calendarMonth) &&\n\t\t\t\t\ttodoDateObj.getYear() === calendarYear)\n\t\t\t\t\tarr.push(todo);\n\t\t\t})\n\t\t\tconst str = arr.join('; ');\n\t\t\tconst resStr = str.length > 19 ? str.substr(0, 16) + '...' : str;\n\t\t\treturn (<p>{resStr}</p>)\n\t\t}\n\t}\n\n\tconst compare = (time1, time2) => {\n\t\tconst obj1 = new Date(time1);\n\t\tconst Y1 = obj1.getYear();\n\t\tconst M1 = obj1.getMonth();\n\t\tconst D1 = obj1.getDate();\n\t\tconst obj2 = new Date(time2);\n\t\tconst Y2 = obj2.getYear();\n\t\tconst M2 = obj2.getMonth();\n\t\tconst D2 = obj2.getDate();\n\t\treturn ((Y1 === Y2) && (M1 === M2) && (D1 === D2))\n\t}\n\n\tconst getDayTodo = (time) => todoArr.filter((v) => compare(time, v.date))\n\n\tconst important = <FontAwesomeIcon size=\"lg\" icon={faFlag}/>;\n\tconst done = <FontAwesomeIcon size=\"lg\" icon={faCheck}/>;\n\tconst regular = <FontAwesomeIcon size=\"lg\" icon={faAlignJustify}/>;\n\n\tconst onClickDayFn = (value) => {\n\t\tif (getDayTodo(value).length)\n\t\t\thistory.push(`/home/calendar/${value}`);\n\t}\n\n\tconst getVTline = (props) => {\n\t\tconst dayTodo = getDayTodo(props.match.params.day);\n\t\tconst iconStyle = {background: 'rgb(33, 150, 243)', color: '#fff'};\n\t\tconst dayTodoTimesorted = dayTodo.sort(({date: left}, {date: right}) =>\n\t\t\t(new Date(left) - new Date(right)));\n\t\tconst dayTodoJSX = dayTodoTimesorted.map((v, index) => {\n\t\t\tconst ifDone = v.completed ? 'done' : '';\n\t\t\tconst icon = (() => {\n\t\t\t\tif (v.completed)\n\t\t\t\t\treturn done;\n\t\t\t\telse if (v.important)\n\t\t\t\t\treturn important;\n\t\t\t\telse\n\t\t\t\t\treturn regular;\n\t\t\t})();\n\t\t\tconst formatter = (new Intl.NumberFormat('ru-RU', {minimumIntegerDigits: 2})).format;\n\t\t\tconst timeObj = new Date(v.date);\n\t\t\tconst deadline = formatter(timeObj.getHours()) + ':' + formatter(timeObj.getMinutes());\n\n\t\t\treturn <VerticalTimelineElement key={index} iconStyle={iconStyle} icon={icon} date={deadline}>\n\t\t\t\t<h4 className={ifDone}>{v.todo} [{v.type}]</h4><p className={ifDone}>{v.desc}</p>\n\t\t\t</VerticalTimelineElement>\n\t\t});\n\t\treturn (<VerticalTimeline>{dayTodoJSX}</VerticalTimeline>)\n\t}\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path={match.path}>\n\t\t\t\t<Calendar tileContent={tileContentFn} className=\"calendar\" onClickDay={onClickDayFn}/>\n\t\t\t</Route>\n\t\t\t<Route path={`${match.path}/:day`} render={(props) => getVTline(props)}/>\n\t\t</Switch>\n\t)\n}","import React, {useEffect} from 'react';\nimport {Button} from 'reactstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCalendarAlt, faList} from '@fortawesome/free-solid-svg-icons';\nimport {Route, Switch, Redirect, useHistory, useRouteMatch} from \"react-router-dom\";\n\nimport './AppAuthorized.css';\n\nimport Todo from '../Todo/Todo.jsx';\nimport Calendar from '../Calendar/Calendar.jsx';\n\nconst AppAuthorized = (props) => {\n\tlet history = useHistory();\n\tlet match = useRouteMatch();\n\tuseEffect(() => {\n\t\tif (!props.isAuthorized)\n\t\t\thistory.push('/login');\n\t});\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"mainBtns\">\n\t\t\t\t<Button onClick={() => history.push(`${match.path}/list`)}><FontAwesomeIcon icon={faList}/></Button>\n\t\t\t\t<Button onClick={() => history.push(`${match.path}/calendar`)}><FontAwesomeIcon\n\t\t\t\t\ticon={faCalendarAlt}/></Button>\n\t\t\t</div>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path={match.path}>\n\t\t\t\t\t<Redirect to={`${match.path}/list`}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route exact path={`${match.path}/list`}>\n\t\t\t\t\t<Todo {...props} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={`${match.path}/list/:sort`}>\n\t\t\t\t\t<Todo {...props} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path={`${match.path}/calendar`}>\n\t\t\t\t\t<Calendar {...props}/>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\nexport default AppAuthorized;\n","import openweatherKey from \"./openweatherKey\";\n\nexport default `http://api.openweathermap.org/data/2.5/weather?id=524901&APPID=${openweatherKey}&units=metric`","export default '3eb3f8b5e93b49c844e8317fe0e4e210';","export default ['http://openweathermap.org/img/wn/', '@2x.png'];","import React, {useState, useEffect} from 'react';\nimport Img from 'react-image';\nimport openweatherUrl from \"../../config/openweatherUrl\";\nimport openweatherIconUrl from \"../../config/openweatherIconUrl\";\n\nimport './Header.css'\n\nexport default () => {\n\tconst [weatherText, setWeatherText] = useState('');\n\tconst [weatherIcon, setWeatherIcon] = useState('');\n\n\tuseEffect(() => {\n\t\tfetch(openweatherUrl)\n\t\t\t.then((r) => r.json())\n\t\t\t.then((r) => {\n\t\t\t\tconst row = r.main.temp + ' °C';\n\t\t\t\tsetWeatherText(row);\n\t\t\t\tsetWeatherIcon(openweatherIconUrl[0] + r.weather[0].icon + openweatherIconUrl[1]);\n\t\t\t})\n\t}, [])\n\treturn (\n\t\t<div className=\"header navbar\">\n\t\t\t\t<div id={'title'}>\n\t\t\t\t\tTodoList\n\t\t\t\t</div>\n\t\t\t\t<div id={'weather'}>\n\t\t\t\t\t<div className=\"temp\">\n\t\t\t\t\t\t{weatherText}\n\t\t\t\t\t</div>\n\t\t\t\t\t<Img className=\"icon\" src={weatherIcon}/>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, {useState, useEffect} from 'react';\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\nimport './Login.css';\nimport expressLoginUrl from \"../../config/expressLoginUrl\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default (props) => {\n\tlet history = useHistory();\n\tconst [user, setUser] = useState('');\n\tconst handleChangeUser = (event) => setUser(event.target.value)\n\tconst [psw, setPsw] = useState('');\n\tconst handleChangePsw = (event) => setPsw(event.target.value)\n\tconst [invalidInput, setInvalidInput] = useState(false);\n\tconst [btnClr, setBtnClr] = useState('secondary');\n\n\tuseEffect(() => {\n\t\tif (props.isAuthorized)\n\t\t\thistory.push('/home');\n\t}, [history, props.isAuthorized]);\n\n\tconst sbmt = (event) => {\n\t\tevent.preventDefault();\n\t\tfetch(expressLoginUrl, {\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({username: user, password: psw})\n\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tprops.setAuthorized(r.status);\n\t\t\t\tif (r.status === 200)\n\t\t\t\t\treturn r.text();\n\t\t\t\telse {\n\t\t\t\t\tsetInvalidInput(true);\n\t\t\t\t\tsetBtnClr('danger');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsetInvalidInput(false);\n\t\t\t\t\t\tsetBtnClr('secondary');\n\t\t\t\t\t}, 2000);\n\t\t\t\t\tprops.setToken('');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tif (r) {\n\t\t\t\t\tprops.setToken(r);\n\t\t\t\t\thistory.push('/home');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err)\n\t\t\t})\n\t}\n\n\treturn (\n\t\t<div id=\"login\" className=\"form-signin\">\n\t\t\t<Form onSubmit={sbmt}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"login\">Login</Label>\n\t\t\t\t\t<Input invalid={invalidInput} type=\"text\" id=\"login\" placeholder=\"Login\"\n\t\t\t\t\t\t   value={user} onChange={handleChangeUser} required/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label for=\"psw\">Password</Label>\n\t\t\t\t\t<Input invalid={invalidInput} type=\"password\" id=\"psw\" placeholder=\"Password\"\n\t\t\t\t\t\t   value={psw} onChange={handleChangePsw} required/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<Button color={btnClr} className={\"btn btn-lg btn-primary btn-block\"}>Submit</Button>\n\t\t\t</Form>\n\t\t</div>\n\t)\n}","export default 'http://localhost:3001/login';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport './css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {useEffect, useState} from 'react';\nimport AppAuthorized from '../AppAuthorized/AppAuthorized.jsx';\nimport Header from '../Header/Header.jsx';\nimport Login from '../Login/Login.jsx';\nimport expressUrl from \"../../config/expressUrl\";\nimport {BrowserRouter, Route, Switch, Redirect} from \"react-router-dom\";\n\nexport default () => {\n\tconst [token, setTokenHook] = useState(localStorage.getItem('token'));\n\tconst [authorizedStatus, setAuthorized] = useState();\n\n\tuseEffect(() => {\n\t\tif (token) {\n\t\t\tfetch(expressUrl, {\n\t\t\t\theaders: {\n\t\t\t\t\t\"Authorization\": `Bearer ${token}`\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then((r) => {\n\t\t\t\t\tsetAuthorized(r.status);\n\t\t\t\t\tif (r.status !== 200) {\n\t\t\t\t\t\tsetToken('');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t}, [token]);\n\n\tconst setToken = (tkn) => {\n\t\tlocalStorage.setItem('token', tkn);\n\t\tsetTokenHook(tkn);\n\t}\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Header/>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path={'/'}>\n\t\t\t\t\t<Redirect to={'/login'}/>\n\t\t\t\t</Route>\n\n\t\t\t\t<Route path={'/login'} render={() => <Login setToken={setToken} setAuthorized={setAuthorized}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisAuthorized={((authorizedStatus === 200) && !!token)}/>}/>\n\n\t\t\t\t<Route path={'/home'}>\n\t\t\t\t\t<AppAuthorized token={token} setAuthorized={setAuthorized}\n\t\t\t\t\t\t\t\t   isAuthorized={((authorizedStatus === 200) && !!token)}/>\n\t\t\t\t</Route>\n\t\t\t\t<Route>\n\t\t\t\t\t<h1 className={'text-center'}>\n\t\t\t\t\t\t404\n\t\t\t\t\t</h1>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t)\n}\n"],"sourceRoot":""}